services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:release
    volumes:
      - /mnt/photos:/usr/src/app/upload/library
      - ${DATA_DIR:-/opt/apps}/immich/.immich:/usr/src/app/upload/.immich
      - ${DATA_DIR:-/opt/apps}/immich/profiles:/usr/src/app/upload/profile
      - ${DATA_DIR:-/opt/apps}/immich/backups:/usr/src/app/upload/backups

      - /mnt/temp/immich/thumbnails:/usr/src/app/upload/thumbs
      - /mnt/temp/immich/uploads:/usr/src/app/upload/upload
      - /mnt/temp/immich/encoded-video:/usr/src/app/upload/encoded-video

      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=Europe/Zurich
      - DB_HOSTNAME=immich_postgres
      - DB_USERNAME=${DB_USERNAME:?DB_USERNAME is not set}
      - DB_PASSWORD=${DB_PASSWORD:?DB_PASSWORD is not set}
      - DB_DATABASE_NAME=${DB_DATABASE_NAME:?DB_DATABASE_NAME is not set}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich.entrypoints=web"
      - "traefik.http.routers.immich.rule=Host(`photos.mvr.io`)"
      - "traefik.http.routers.immich.service=immich-server"
      - "traefik.http.services.immich-server.loadbalancer.server.port=2283"
    depends_on:
      - redis
      - database
    restart: unless-stopped
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm
    healthcheck:
      test: redis-cli ping || exit 1
    restart: unless-stopped

  database:
    container_name: immich_postgres
    image: tensorchord/pgvecto-rs:pg15-v0.2.0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:?DB_PASSWORD is not set}
      POSTGRES_USER: ${DB_USERNAME:?DB_USERNAME is not set}
      POSTGRES_DB: ${DB_DATABASE_NAME:?DB_DATABASE_NAME is not set}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${DATA_DIR:-/opt/apps}/immich/data:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    restart: unless-stopped
