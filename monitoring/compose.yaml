services:
  beszel:
    image: henrygd/beszel:latest
    container_name: beszel
    restart: unless-stopped
    networks:
      - mvr-hl
    ports:
      - 8090:8090
    volumes:
      - ${DATA_DIR:-/opt/apps}/beszel:/beszel_data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.beszel.entrypoints=web"
      - "traefik.http.routers.beszel.rule=Host(`stats.mvr.io`)"
      - "traefik.http.services.beszel.loadbalancer.server.port=8090"

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    restart: unless-stopped
    networks:
      - mvr-hl
    ports:
      - 3001:3001
    volumes:
      - ${DATA_DIR:-/opt/apps}/uptime-kuma:/app/data

  tautulli:
    image: tautulli/tautulli:latest
    container_name: tautulli
    restart: unless-stopped
    networks:
      - mvr-hl
    volumes:
      - ${DATA_DIR:-/opt/apps}/tautulli:/config
    environment:
      - TZ=Europe/Zurich
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tautulli.entrypoints=web"
      - "traefik.http.routers.tautulli.rule=Host(`tautulli.mvr.io`)"
      - "traefik.http.services.tautulli.loadbalancer.server.port=8181"

  ddns-updater:
    image: qmcgaw/ddns-updater:latest
    container_name: ddns-updater
    restart: unless-stopped
    networks:
      - mvr-hl
    ports:
      - 8000:8000
    volumes:
      - ${DATA_DIR:-/opt/apps}/ddns-updater:/updater/data

  #
  # Plausible
  #
  plausible_db:
    image: postgres:16-alpine
    restart: always
    volumes:
      - ${DATA_DIR:-/opt/apps}/plausible/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${PLAUSIBLE_POSTGRES_PASSWORD:?Plausible database password is not set}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      start_period: 1m

  plausible_events_db:
    image: clickhouse/clickhouse-server:24.12-alpine
    restart: always
    volumes:
      - ${DATA_DIR:-/opt/apps}/plausible/event-data:/var/lib/clickhouse
      - event-logs:/var/log/clickhouse-server
      - ${DATA_DIR:-/opt/apps}/plausible/clickhouse/logs.xml:/etc/clickhouse-server/config.d/logs.xml:ro
      # This makes ClickHouse bind to IPv4 only, since Docker doesn't enable IPv6 in bridge networks by default.
      # Fixes "Listen [::]:9000 failed: Address family for hostname not supported" warnings.
      - ${DATA_DIR:-/opt/apps}/plausible/clickhouse/ipv4-only.xml:/etc/clickhouse-server/config.d/ipv4-only.xml:ro
      # This makes ClickHouse consume less resources, which is useful for small setups.
      # https://clickhouse.com/docs/en/operations/tips#using-less-than-16gb-of-ram
      - ${DATA_DIR:-/opt/apps}/plausible/clickhouse/low-resources.xml:/etc/clickhouse-server/config.d/low-resources.xml:ro
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    environment:
      - CLICKHOUSE_SKIP_USER_SETUP=1
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 -O - http://127.0.0.1:8123/ping || exit 1"]
      start_period: 1m

  plausible:
    image: ghcr.io/plausible/community-edition:v3.0.1
    restart: always
    command: sh -c "/entrypoint.sh db createdb && /entrypoint.sh db migrate && /entrypoint.sh run"
    depends_on:
      plausible_db:
        condition: service_healthy
      plausible_events_db:
        condition: service_healthy
    ports:
      - 10005:8000
    volumes:
      - ${DATA_DIR:-/opt/apps}/plausible/data:/var/lib/plausible
      - plausible-tmp:/var/lib/plausible/tmp
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    environment:
      - TMPDIR=/var/lib/plausible/tmp
      # required: https://github.com/plausible/community-edition/wiki/configuration#required
      - BASE_URL=https://stats.marvinvr.ch
      - SECRET_KEY_BASE=${PLAUSIBLE_SECRET_KEY_BASE:?Plausible secret key base is not set}
      - DISABLE_REGISTRATION=true

  checkmate_client:
    image: ghcr.io/bluewave-labs/checkmate:frontend-dist
    restart: always
    environment:
      UPTIME_APP_API_BASE_URL: "https://check-api.mvr.bz/api/v1"
      UPTIME_APP_CLIENT_HOST: "https://check.mvr.bz"
    ports:
      - "10006:80"
    depends_on:
      - checkmate_server
  checkmate_server:
    image: ghcr.io/bluewave-labs/checkmate:backend-dist
    restart: always
    hostname: server
    ports:
      - "10007:52345"
    depends_on:
      - checkmate_redis
      - checkmate_mongodb
    environment:
      - DB_CONNECTION_STRING=mongodb://checkmate_mongodb:27017/checkmate_db?replicaSet=rs0
      - REDIS_URL=redis://checkmate_redis:6379
      - CLIENT_HOST=https://check.mvr.bz
      - JWT_SECRET=${CHECKMATE_JWT_SECRET:?Checkmate JWT secret is not set}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  checkmate_redis:
    image: ghcr.io/bluewave-labs/checkmate:redis-dist
    restart: always
    volumes:
      - ${DATA_DIR:-/opt/apps}/checkmate/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
  checkmate_mongodb:
    image: ghcr.io/bluewave-labs/checkmate:mongo-dist
    restart: always
    volumes:
      - ${DATA_DIR:-/opt/apps}/checkmate/mongo:/data/db
    command: ["mongod", "--quiet", "--replSet", "rs0", "--bind_ip_all"]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'checkmate_mongodb:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

volumes:
  event-logs:
  plausible-tmp:

networks:
  mvr-hl:
    external: true